const passport = require("passport")
const GoogleStrategy = require("passport-google-oauth20")
const { googleClientID, googleClientSecret } = require("../config/keys")
const mongoose = require("mongoose")

//fetch User schema
const User = mongoose.model("users")

//serialize user and turn it into an id, stuff in the cookie
passport.serializeUser((user, done) => {
  done(null, user.id) // uses id generated by mongo
})

passport.deserializeUser((id, done) => {
  User.findById(id).then(user => {
    done(null, user)
  })
})

//setup strategy with the name "google"
passport.use(
  new GoogleStrategy(
    {
      clientID: googleClientID,
      clientSecret: googleClientSecret,
      callbackURL: "/auth/google/callback",
      proxy: true
    },
    async (accessToken, refreshToken, profile, done) => {
      const existingUser = await User.findOne({ googleId: profile.id })
      if (existingUser) {
        done(null, existingUser)
      } else {
        const user = await new User({ googleId: profile.id }).save()
        done(null, user)
      }
    }
  )
)
